# global options
{
	admin off # theres no need for the admin api in railway's environment
	persist_config off # storage isn't persistent anyway
	auto_https off # railway handles https for us, this could in some cases cause issues if left enabled
	# runtime logs
	log {
		format json # set runtime log format to json mode 
	}
	# server options
	servers {
		trusted_proxies static private_ranges # trust railway's proxy
	}
	order s3proxy last
}

(lb_settings) {
	lb_policy round_robin
	lb_retries 100
	lb_try_duration 10s
	lb_try_interval 250ms
}

(passive_health_checks) {
	fail_duration 60s
	max_fails 300
	unhealthy_latency 5s
	unhealthy_request_count 200
}

# site block, listens on the $PORT environment variable, automatically assigned by railway
:{$PORT} {
	# access logs
	log {
		format json # set access log format to json mode
	}

	# proxy all requests for /* to the frontend, configure these variables in the service settings
	reverse_proxy {
		# for private networking replicas are exposed as multiple dns results, use those dns results as the upstreams
		dynamic a {
			name {$FRONTEND_DOMAIN}
			port {$FRONTEND_PORT}
			refresh 1s
			dial_timeout 30s
			versions ipv4 ipv6
		}

		# configure load balancing settings
		import lb_settings

		# configure passive health checks
		import passive_health_checks

		# sets the Host header to the header to the dynamic name and port options
		header_up Host {upstream_hostport}
	}

	redir /u /u/ 301
	handle_path /u* {
		reverse_proxy {
			# for private networking replicas are exposed as multiple dns results, use those dns results as the upstreams
			dynamic a {
				name {$DASHBOARD_DOMAIN}
				port {$DASHBOARD_PORT}
				refresh 1s
				dial_timeout 30s
				versions ipv4 ipv6
			}

			# configure load balancing settings
			import lb_settings

			# configure passive health checks
			import passive_health_checks

			# sets the Host header to the header to the dynamic name and port options
			header_up Host {upstream_hostport}
		}
	}

	handle /api/* {
		# proxy all requests for /api/* to the backend, configure this variable in the service settings
		reverse_proxy {
			# for private networking replicas are exposed as multiple dns results, use those dns results as the upstreams
			dynamic a {
				name {$BACKEND_DOMAIN}
				port {$BACKEND_PORT}
				refresh 1s
				dial_timeout 30s
				versions ipv4 ipv6
			}

			# configure load balancing settings
			import lb_settings

			# configure passive health checks
			import passive_health_checks

			# sets the Host header to the header to the dynamic name and port options
			header_up Host {upstream_hostport}
		}
	}

	handle_path /ws {
		rewrite * /{$STAGE}{uri}
		reverse_proxy {$CHAT_API_URL} {
			header_up Host {upstream_hostport}
		}
	}

	# location /boticons {
  #   alias /home/ubuntu/s3/prod_customize;
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto https;
  # }

	route /boticons/* {
		root * /
		s3proxy {
			bucket {$S3_BUCKET}
			region {$S3_REGION}
			force_path_style
		}
	}
}
